# HAProxy Configuration for FinMark Corporation - Project Bedrock
# Module 2: High-Availability & Performance Infrastructure

global
    daemon
    maxconn 4096
    log stdout local0 info

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    log global

# Frontend - Main entry point for client requests
frontend finmark_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/finmark.pem
    
    # Redirect HTTP to HTTPS for security
    redirect scheme https if !{ ssl_fc }
    
    # Define ACLs for different services
    acl checkout_requests path_beg /api/checkout
    acl dashboard_requests path_beg /dashboard
    acl static_content path_beg /static /images
    
    # Route to appropriate backends
    use_backend checkout_backend if checkout_requests
    use_backend dashboard_backend if dashboard_requests
    use_backend static_backend if static_content
    default_backend web_backend

# Backend - Checkout service (Critical - High Priority)
backend checkout_backend
    balance roundrobin
    option httpchk GET /health
    
    # Checkout servers with health checks
    server checkout1 192.168.1.101:8443 check inter 2000 rise 2 fall 3 maxconn 500
    server checkout2 192.168.1.102:8443 check inter 2000 rise 2 fall 3 maxconn 500
    
    # Performance optimization for checkout
    timeout server 10000ms
    option redispatch

# Backend - Dashboard service (High Priority)
backend dashboard_backend
    balance leastconn
    option httpchk GET /dashboard/health
    
    # Dashboard servers optimized for concurrent users
    server dashboard1 192.168.1.103:8080 check inter 3000 rise 2 fall 3 maxconn 200
    server dashboard2 192.168.1.104:8080 check inter 3000 rise 2 fall 3 maxconn 200
    
    # Sticky sessions for dashboard consistency
    cookie JSESSIONID prefix nocache

# Backend - Static content (Lower Priority)
backend static_backend
    balance roundrobin
    option httpchk GET /health
    
    # Static content servers with bandwidth limits
    server static1 192.168.1.105:8080 check maxconn 100
    server static2 192.168.1.106:8080 check maxconn 100

# Backend - General web services
backend web_backend
    balance roundrobin
    option httpchk GET /health
    
    # Main web servers
    server web1 192.168.1.107:8080 check inter 5000 rise 2 fall 3 maxconn 300
    server web2 192.168.1.108:8080 check inter 5000 rise 2 fall 3 maxconn 300

# Statistics page for monitoring
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
